
import os ;

# below feature rule come from http://www.boost.org/doc/tools/build/doc/html/bbv2/extending/features.html

import feature : feature ;
import modules : poke ;

# this feature is defined so we can add a dependency on <distri>lenny for some targets
# disabled because in our current code it finds the right library
#feature distri : none lenny : propagated ;

# No need to make it a new variant after all
#variant lenny : release ;

path-constant TOP : . ;

# Returns environment value if it exists or default otherwise.
# Allow us to customize install path with shell variables like $PREFIX...
# (this is bad practice and should be replaced by a site configuration file
# but I until now I miserably failed creating a clean separate configuration file)
rule setvar ( env : default * )
{
    if [ os.environ $(env) ]
    {
        return [ os.environ $(env) ] ;
    }
    else
    {
        return $(default) ;
    }
}

constant ARCH : [ SHELL "lscpu | perl -ne 'if (/^Architecture.*(x86_64|i386|i686)/) {print $1};'" ] ;
# constant ARCH : [ SHELL "lscpu | perl -ane 'my %h = map { $F[0], $F[1] } <>; print $h{q{Architecture:}}'" ] ;
constant PYTHON_VER : [ SHELL "perl -e 'for my $x (q{python2.7}, q{python2.6}) { if (-e q{/usr/include/}.$x.q{/Python.h}){ print $x; last;}};'" ] ;
constant PYTHON_INCLUDE : [ SHELL "perl -e 'for my $x (q{python2.7}, q{python2.6}) { if (-e q{/usr/include/}.$x.q{/Python.h}){ print q{/usr/include/}.$x; last;}};'" ] ;


constant FIXTURES_PATH : [ setvar FIXTURES_PATH : ./tests/fixtures ] ;
constant INSTALLDIR : [ setvar DESTDIR : "" ] ;
constant PREFIX : [ setvar PREFIX : /usr/local ] ;
constant BIN_PREFIX : [ setvar BIN_PREFIX : $(PREFIX)/bin ] ;
constant LIB_PREFIX : [ setvar LIB_PREFIX : $(PREFIX)/lib ] ;
constant SHARE_PREFIX : [ setvar SHARE_PREFIX : $(PREFIX)/share/rdpproxy ] ;
constant RECORD_TMP_PATH : [ setvar RECORD_TMP_PATH : /var/rdpproxy/tmp ] ;
constant RECORD_PATH : [ setvar RECORD_PATH : /var/rdpproxy/recorded ] ;
constant ETC_PREFIX : [ setvar ETC_PREFIX : /etc/rdpproxy ] ;
constant CERT_PREFIX : [ setvar CERT_PREFIX : /etc/rdpproxy/cert ] ;
constant HASH_PATH : [ setvar HASH_PATH : /var/rdpproxy/hash ] ;
constant PERSISTENT_PATH : [ setvar PERSISTENT_PATH : /var/lib/redemption/cache ] ;
constant DRIVE_REDIRECTION_PATH : [ setvar DRIVE_REDIRECTION_PATH : /var/rdpproxy/drive_redirection ] ;

constant PNG_DEBUG : <variant>debug:<library>png ;

rule defines ( properties * )
{
    local defs ;
    defs += <define>SHARE_PATH='\"$(PREFIX)/share/rdpproxy\"' ;
    defs += <define>CFG_PATH='\"$(ETC_PREFIX)\"' ;
    defs += <define>RECORD_PATH='\"$(RECORD_PATH)\"' ;
    defs += <define>RECORD_TMP_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>FLV_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>OCR_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>PNG_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>WRM_PATH='\"$(RECORD_PATH)\"' ;
    defs += <define>HASH_PATH='\"$(HASH_PATH)\"' ;
    defs += <define>LICENSE_PATH='\"$(CERT_PREFIX)/rdplicense\"' ;
    defs += <define>CERTIF_PATH='\"$(CERT_PREFIX)/rdp\"' ;
    defs += <define>FIXTURES_PATH='\"$(FIXTURES_PATH)\"' ;
    defs += <define>PERSISTENT_PATH='\"$(PERSISTENT_PATH)\"' ;
    defs += <define>DRIVE_REDIRECTION_PATH='\"$(DRIVE_REDIRECTION_PATH)\"' ;
    if [ os.environ VERBOSE ]
    {
        defs += <define>VERBOSE ;
    }
    return $(defs) ;
}
variant coverage : debug : <cxxflags>--profile-arcs <cxxflags>--test-coverage <cxxflags>--coverage <link>shared ;


constant CXXFLAGS-COMMON :
#     <cxxflags>-Weffc++
#     <cxxflags>-Wswitch-enum
#     <cxxflags>-Wswitch-default
    <cxxflags>-pedantic
    <cxxflags>-pedantic-errors
#    <cxxflags>-Wconversion
    <cxxflags>-Wvla
    <cxxflags>-Wstrict-aliasing=2
#    <cxxflags>-Wlong-long

    <cxxflags>-Wuninitialized
    <cxxflags>-Wnon-virtual-dtor
    <cxxflags>-Wall
    <cxxflags>-Wextra
    <cxxflags>-Wno-unused-parameter
    <cxxflags>-Wno-long-long
    <cxxflags>-Wtype-limits
    <cxxflags>-Wundef
    <cxxflags>-Wcast-align
    <cxxflags>-Wchar-subscripts
#     <cxxflags>-Wformat
    <cxxflags>-Wformat=2
    <cxxflags>-Wformat-security
#     <cxxflags>-Wmissing-format-attribute
    <cxxflags>-Wsequence-point
    <cxxflags>-Wreturn-type
    <cxxflags>-Wfloat-equal
#     <cxxflags>-Wshadow
    <cxxflags>-Wpointer-arith
    <cxxflags>-Wsign-compare
#     <cxxflags>-Wmissing-declarations
    <cxxflags>-Wpacked
    <cxxflags>-Wredundant-decls
#     <cxxflags>-Winline
    <cxxflags>-Winit-self
    <cxxflags>-Wcast-qual
    <cxxflags>-Woverloaded-virtual
    <cxxflags>-Wunused-variable
#     <cxxflags>-Wunused-parameter
    <cxxflags>-Wmissing-include-dirs
    <cxxflags>-Wunused
    <cxxflags>-Wendif-labels
    <cxxflags>-Wwrite-strings
#     <cxxflags>-Wpadded
    <cxxflags>-Wstrict-overflow=1
#     <cxxflags>-Wstrict-overflow=5
    <cxxflags>-Wc++11-compat
    <cxxflags>-Wnarrowing
    <cxxflags>-Wvolatile-register-var
    <cxxflags>-Wdisabled-optimization
    <cxxflags>-Woverlength-strings
    <cxxflags>-Warray-bounds

#     <toolset>clang:<cxxflags>-Weverything
#     <toolset>clang:<cxxflags>-Wno-c++98-compat
    <toolset>clang:<cxxflags>-Wno-mismatched-tags
#    <toolset>clang:<cxxflags>-Wno-overloaded-virtual
    <toolset>clang:<cxxflags>-Wno-char-subscripts
    <toolset>clang:<cxxflags>-Wno-unused-variable
#     <toolset>clang:<cxxflags>-Wno-unused-private-field
;


constant CXXFLAGS-GCC-4.7 :
    <cxxflags>-Wunused-but-set-parameter
    <cxxflags>-Wunused-but-set-variable
#     <cxxflags>-Wsuggest-attribute=pure
#     <cxxflags>-Wsuggest-attribute=const
    <cxxflags>-Wsuggest-attribute=noreturn
    <cxxflags>-Wzero-as-null-pointer-constant
    <cxxflags>-Wlogical-op
#     <cxxflags>-Wno-aggressive-loop-optimizations
    <cxxflags>-Wnormalized=nfc #disable ?
    <cxxflags>-Wvector-operation-performance
    <cxxflags>-Wdouble-promotion
   <cxxflags>-Wmaybe-uninitialized
    <cxxflags>-Wtrampolines
;


constant CXXFLAGS-GCC-4.8 :
    $(CXXFLAGS-GCC-4.7)
    <cxxflags>-Wuseless-cast
;


constant CXXFLAGS-GCC-4.9 :
    $(CXXFLAGS-GCC-4.8)
    <cxxflags>-Wconditionally-supported
    <cxxflags>-Wfloat-conversion
    <cxxflags>-Wopenmp-simd
    <cxxflags>-Wparentheses

    <variant>release:<cxxflags>-flto
;


constant CXXFLAGS-GCC-5 :
    $(CXXFLAGS-GCC-4.9)
    <cxxflags>-Wlogical-not-parentheses
    <cxxflags>-Wswitch-bool
    <cxxflags>-Wsizeof-array-argument
    <cxxflags>-Wbool-compare
#    <cxxflags>-Wsuggest-final-types
#    <cxxflags>-Wsuggest-final-methods
#     <cxxflags>-Wsuggest-attribute=pure
#    <cxxflags>-Wsuggest-attribute=const
    <variant>release:<cxxflags>-flto-odr-type-merging
    # <cxxflags>-Wno-odr #  Requires -flto-odr-type-merging to be enabled (enabled by ##default)
;


constant CXXFLAGS-GCC-5.1 :
    $(CXXFLAGS-GCC-5)
    <cxxflags>-Wsuggest-override
    <cxxflags>-fsized-deallocation
    <cxxflags>-Wsized-deallocation
    <cxxflags>-Warray-bounds=2
;


constant CXXFLAGS-GCC-6 :
    $(CXXFLAGS-GCC-5)
;


# switch [ modules.peek : ODSHOME ]
# {
#     case *gcc-4.8* : constant CXXFLAGS-GCC : $(CXXFLAGS-GCC-4.8) ;
#     case *gcc-4.9* : constant CXXFLAGS-GCC : $(CXXFLAGS-GCC-4.9) ;
#     case *gcc-5*   : constant CXXFLAGS-GCC : $(CXXFLAGS-GCC-5) ;
#     case *gcc-6*   : constant CXXFLAGS-GCC : $(CXXFLAGS-GCC-6) ;
# }


#gcov -a -c -b -f -o bin/gcc-4.6/coverage/tests/test_stream.gcno bin/gcc-4.6/coverage/test_stream

lib gcov : : <name>gcov : ;

constant GCOV : <variant>coverage:<library>gcov ;
constant GCOV_NO_BUILD : <variant>coverage:<build>no ;

variant strict : :
    <cxxflags>-Wold-style-cast
    <cxxflags>-Wsign-conversion
;

variant asan : debug :
    <cxxflags>-fsanitize=address
    <cxxflags>-fno-omit-frame-pointer
    <linkflags>-lasan
    <define>CXX_ENABLE_ASAN
;

project redemption
    : requirements
    <include>src
    <include>src/utils
    <include>src/core
    <include>src/configs/autogen
    <include>src/configs/variant
    <include>src/configs/include
    <include>src/mod
    <include>src/front
    <include>src/acl
    <include>src/capture
    <include>src/keyboard
    <include>src/keyboard/reversed_keymaps
    <include>src/regex
    <include>src/headers
    <include>src/main
    <include>modules/includes
    <include>/usr/include
    <include>tests

    <conditional>@defines

    <variant>debug:<define>REDASSERT_AS_ASSERT
    <variant>debug:<cxxflags>-g

    <cxxflags>-std=c++11


    $(CXXFLAGS-COMMON)
    <toolset>gcc-4.7:$(CXXFLAGS-GCC-4.7)
    <toolset>gcc-4.8:$(CXXFLAGS-GCC-4.8)
    <toolset>gcc-4.9:$(CXXFLAGS-GCC-4.9)
    <toolset>gcc-4.9.1:$(CXXFLAGS-GCC-4.9)
    <toolset>gcc-4.9.2:$(CXXFLAGS-GCC-4.9)
    <toolset>gcc-4.9.3:$(CXXFLAGS-GCC-4.9)
    <toolset>gcc-5.0:$(CXXFLAGS-GCC-5)
    <toolset>gcc-5.0.0:$(CXXFLAGS-GCC-5)
    <toolset>gcc-5.1.0:$(CXXFLAGS-GCC-5.1)
    <toolset>gcc-5.1:$(CXXFLAGS-GCC-5.1)
    <toolset>gcc-5.2.0:$(CXXFLAGS-GCC-5.1)
    <toolset>gcc-5.2:$(CXXFLAGS-GCC-5.1)
    <toolset>gcc-6.0:$(CXXFLAGS-GCC-6)
    <toolset>gcc-6.1:$(CXXFLAGS-GCC-6)

#    <cxxflags>-fpie
    <cxxflags>-fPIC


    <define>_FILE_OFFSET_BITS=64
    <define>_LARGEFILE64_SOURCE

    <define>__STDC_FORMAT_MACROS

    <define>PUBLIC

    <define>QT_NO_KEYWORDS
    <define>QT_NO_DEBUG

   : default-build release

;

explicit install instexe install-bin install-etc install-etc-themes install-share install-lib check_coverage exe ;

alias instexe : install-bin ;
alias install : install-bin install-etc install-etc-themes install-share install-lib ;
alias exe     : rdpproxy redrec reddec redver rdptproxy rdptanalyzer rdpclient ;
alias libs    : libredver ;


install install-bin
    : exe
    : <install-type>EXE <install-dependencies>on
    : <location>$(INSTALLDIR)/usr/local/bin
    ;

install install-share
    : [ glob sys/share/rdpproxy/[^.k]* ]
    :
    : <location>$(INSTALLDIR)/usr/local/share/rdpproxy
    ;

install install-etc
    : [ glob sys/etc/rdpproxy/*ini sys/etc/rdpproxy/*pem sys/etc/rdpproxy/*crt sys/etc/rdpproxy/*key sys/etc/rdpproxy/*p12 ]
    :
    : <location>$(INSTALLDIR)/etc/rdpproxy
    ;

install install-etc-themes
    : [ glob sys/etc/rdpproxy/themes/HOWTO ]
    :
    : <location>$(INSTALLDIR)/etc/rdpproxy/themes
    ;

install install-lib
    : libs
    :
    : <location>$(INSTALLDIR)/usr/lib
    ;

actions gen_redcryptofile {
    echo "$(>)" "$(<)" ;
    cp "$(>)" "$(<)"
    cp "$(<)" tools/redcryptofile/redcryptofile.so
}

explicit pycryptofile redcryptofile.so ;

lib pycryptofile :
        tools/redcryptofile/pycrypto.cpp
        snappy
        python2
        crypto
    :
        <define>REDPYTHON_BINDING
        <include>$(PYTHON_INCLUDE)
        <cxxflags>-fPIC
        <cflags>-fPIC
        <link>shared
    ;

make redcryptofile.so
    :
        pycryptofile
    :
        @gen_redcryptofile
    ;

lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;
lib openssl : : <name>ssl <link>shared ;
# lib X11 : : <name>X11 <link>shared ;
# lib Xfixes : : <name>Xfixes <link>static ;
# lib pthread : : <name>pthread <link>shared ;
# lib pam : : <name>pam <link>static ;

lib krb5 : : <name>krb5 <link>shared ;
lib gssglue : : <name>gssglue <link>shared ;

lib crypto : : <name>crypto <link>shared ;
lib z : : <name>z <link>static ;
lib snappy : : <name>snappy <link>shared ;
# lib lzma : : <name>lzma <link>shared ;
lib dl : : <name>dl <link>shared ;
lib python2 : : <name>$(PYTHON_VER) <link>shared ;


# lib lcms : : <name>lcms <link>shared ;

# lib tiff : : <name>tiff <link>static ;
# lib freetype : : <name>freetype <link>static ;
# lib jpeg : : <name>jpeg <link>static ;
# lib Xext : : <name>Xext <link>static ;

lib libpng : : <name>png <link>static ;
alias png : libpng z ;

# lib icuuc : : <name>icuuc ;


obj mainloop : src/core/mainloop.cpp ;
obj d3des : src/utils/d3des.cpp ;
obj bitmap : src/utils/bitmap_data_allocator.cpp ;
obj program_options : modules/program_options/src/program_options.cpp ;


if ! [ os.environ NO_MAKE_CONFIG ]
{
    actions generate_configs {
        $(>) \
            src/configs/autogen/configs/autogen/authid.hpp \
            src/configs/autogen/configs/autogen/variables_configuration.hpp \
            src/configs/autogen/configs/autogen/set_value.tcc
    }

    make src/configs/autogen/configs/autogen/variables_configuration.hpp
    :
        make_cpp_config
#         [ glob src/configs/variant/configs/variant/*.hpp ]
#         [ glob src/configs/include/configs/*.hpp ]
#         src/utils/apps/app_write_cpp_config.hpp
#         src/utils/config_spec.hpp
#         src/main/write_cpp_config.cpp
    : @generate_configs
    : <location>.
    ;

    alias generate_configs : src/configs/autogen/configs/autogen/variables_configuration.hpp ;

    constant CONFIG_DEPENDENCY : <implicit-dependency>generate_configs ;

    constant EXE_DEPENDENCIES : $(CONFIG_DEPENDENCY) $(GCOV) <cxxflags>-fpie ;
    constant TEST_DEPENDENCIES : $(CONFIG_DEPENDENCY) $(GCOV) ;
}
else
{
    constant EXE_DEPENDENCIES : $(GCOV) ;
    constant TEST_DEPENDENCIES : $(GCOV) ;
}


#
# Redemption
#

exe rdpproxy
    :
        src/main/main.cpp
        src/main/write_python_spec.cpp
        bitmap
        program_options

        mainloop

        d3des

        openssl
        crypto
        z
        dl
        png

        snappy
#        lzma

        krb5
        gssglue
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

exe redrec
    :
        src/main/recorder.cpp
        bitmap
        program_options

        openssl
        crypto
        png
        z
        dl

        snappy
#        lzma
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

exe reddec
    :
        src/main/decrypter.cpp
        program_options

        openssl
        crypto
        z
        dl

        snappy
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

lib libredver
    :
        src/main/do_verifier.cpp

        openssl
        crypto
        z
        dl

        snappy
    :
        <cxxflags>-fvisibility=hidden
    ;


exe redver
    :
        src/main/verifier.cpp
        program_options

        openssl
        crypto
        z
        dl

        snappy
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

exe rdptproxy
    :
        src/main/transparent.cpp
        bitmap
        program_options

        openssl
        crypto
        png
        z
        dl

        snappy
#        lzma

        krb5
        gssglue
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

exe rdptanalyzer
    :
        src/main/tanalyzer.cpp
        program_options

        openssl
        crypto
        png
        z
        dl

        snappy

        krb5
        gssglue
    :
#         <link>static
        $(EXE_DEPENDENCIES)
    ;

exe rdpclient
    : src/main/rdp_client.cpp
        program_options
        bitmap
        openssl
        crypto
        png
        z
        dl

        snappy
        krb5
        gssglue
    :
        $(EXE_DEPENDENCIES)
    ;


#
# Functional tests (run by hand)
#

exe tls_test_client
    :
        src/ftests/tls_test_client.cpp openssl crypto png z dl snappy
    :
#         <link>static
        $(EXE_DEPENDENCIES)
 ;
exe tls_test_server
    :
        src/ftests/tls_test_server.cpp openssl crypto png z dl snappy
    :
#         <link>static
        $(EXE_DEPENDENCIES)
;

exe make_cpp_config
    : src/main/write_cpp_config.cpp
    : $(GCOV)
;

explicit make_cpp_config ;


#exe freetype_draw : ftests/freetype_draw.cpp freetype
#    : <link>static <variant>coverage:<library>gcov
#;

#add flag -I/usr/include/freetype2

#
# Unit Tests
#

import testing ;

import type ;
type.register PYTHON : py ;

actions run-python-test {
    rm -f $(<)
    python $(>[1]) && touch $(<)
}

make test_trace.py.unittest
    :
        tools/redcryptofile/test_trace.py
        redcryptofile.so
    :
        run-python-test
    :
    ;


## Test facility functions or classes
## @{
unit-test test_iter : tests/utils/test_iter.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_noncopyable : tests/utils/test_noncopyable.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_splitter : tests/utils/test_splitter.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_algostring : tests/utils/test_algostring.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_make_unique : tests/utils/test_make_unique.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}

unit-test test_stream : tests/utils/test_stream.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_inputarray : tests/utils/test_inputarray.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_utf : tests/utils/test_utf.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rect : tests/utils/test_rect.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ellipse : tests/utils/test_ellipse.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_drawable : tests/utils/test_drawable.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_region : tests/utils/test_region.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bitfu : tests/utils/test_bitfu.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_parse : tests/utils/test_parse.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_parser : tests/utils/test_parser.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_fileutils : tests/utils/test_fileutils.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_parse_ip_conntrack : tests/utils/test_parse_ip_conntrack.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_x224 : tests/core/RDP/test_x224.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_out_per_bstream : tests/core/RDP/test_out_per_bstream.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mcs : tests/core/RDP/test_mcs.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_mppc : tests/core/RDP/test_mppc.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mppc_40 : tests/core/RDP/test_mppc_40.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mppc_50 : tests/core/RDP/test_mppc_50.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mppc_60 : tests/core/RDP/test_mppc_60.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mppc_61 : tests/core/RDP/test_mppc_61.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_gcc : tests/core/RDP/test_gcc.cpp dl z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_sec : tests/core/RDP/test_sec.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_lic : tests/core/RDP/test_lic.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_share : tests/core/RDP/test_share.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_fastpath : tests/core/RDP/test_fastpath.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_slowpath : tests/core/RDP/test_slowpath.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_clipboard : tests/core/RDP/test_clipboard.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_FileInformation : tests/core/FSCC/test_FileInformation.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdpdr : tests/core/RDP/channels/test_rdpdr.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_authentifier : tests/acl/test_authentifier.cpp crypto libboost_unit_test png : $(TEST_DEPENDENCIES) ;
unit-test test_module_manager : tests/acl/test_module_manager.cpp crypto libboost_unit_test png : $(TEST_DEPENDENCIES) ;
unit-test test_acl_serializer : tests/acl/test_acl_serializer.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

## Capture tests
## @{
unit-test test_image_capture : tests/capture/test_image_capture.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_capture_wrm_save_state : tests/capture/test_capture_wrm_save_state.cpp bitmap png z snappy crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_capture : tests/capture/test_capture.cpp bitmap crypto dl png z snappy libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_chunked_image_transport : tests/capture/test_chunked_image_transport.cpp bitmap png z snappy crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_FileToGraphic : tests/capture/test_FileToGraphic.cpp bitmap png z snappy crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_GraphicToFile : tests/capture/test_GraphicToFile.cpp bitmap png z crypto snappy libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_nativecapture : tests/capture/test_nativecapture.cpp bitmap png z crypto snappy libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_staticcapture : tests/capture/test_staticcapture.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_new_kbdcapture : tests/capture/test_new_kbdcapture.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}

unit-test test_cliprdr : tests/channels/cliprdr/test_cliprdr.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_sound : tests/channels/sound/test_sound.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_callback : tests/core/test_callback.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_channel_list : tests/core/test_channel_list.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_check_files : tests/core/test_check_files.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cipher : tests/core/test_cipher.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_client_info : tests/core/test_client_info.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_theme : tests/utils/test_theme.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_confdescriptor : tests/utils/test_confdescriptor.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_error : tests/core/test_error.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_font : tests/core/test_font.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_listen : tests/core/test_listen.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mainloop : tests/core/test_mainloop.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bitmapupdate : tests/core/RDP/test_bitmapupdate.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bmpcache : tests/core/RDP/caches/test_bmpcache.cpp bitmap crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bmpcachepersister : tests/core/RDP/caches/test_bmpcachepersister.cpp bitmap crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_brushcache : tests/core/RDP/caches/test_brushcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_glyphcache : tests/core/RDP/caches/test_glyphcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_pointercache : tests/core/RDP/caches/test_pointercache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bmpcache_put_get : tests/core/RDP/caches/test_bmpcache_put_get.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_redirection_info : tests/utils/test_redirection_info.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

## Capabilities tests
## @{
unit-test test_config : tests/core/test_config.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_config_assign : tests/core/test_config_assign.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
## }

## Capabilities tests
## @{
unit-test test_bitmapcodecs : tests/core/RDP/capabilities/test_bitmapcodecs.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_activate : tests/core/RDP/capabilities/test_activate.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_bitmap : tests/core/RDP/capabilities/test_cap_bitmap.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_bmpcache : [ obj cap : tests/core/RDP/capabilities/test_bmpcache.cpp ] libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bitmapcachehostsupport : tests/core/RDP/capabilities/test_bitmapcachehostsupport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_brushcache : tests/core/RDP/capabilities/test_cap_brushcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_compdesk : tests/core/RDP/capabilities/test_compdesk.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_control : tests/core/RDP/capabilities/test_control.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_drawgdiplus : tests/core/RDP/capabilities/test_drawgdiplus.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_drawninegridcache : tests/core/RDP/capabilities/test_drawninegridcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_font : tests/core/RDP/capabilities/test_cap_font.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_frameacknowledge : tests/core/RDP/capabilities/test_frameacknowledge.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_general : tests/core/RDP/capabilities/test_general.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_glyphcache : tests/core/RDP/capabilities/test_cap_glyphcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_input : tests/core/RDP/capabilities/test_input.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_largepointer : tests/core/RDP/capabilities/test_largepointer.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_multifragmentupdate : tests/core/RDP/capabilities/test_multifragmentupdate.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_offscreencache : tests/core/RDP/capabilities/test_offscreencache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_order : tests/core/RDP/capabilities/test_order.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_pointer : tests/core/RDP/capabilities/test_pointer.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rail : tests/core/RDP/capabilities/test_rail.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_share : tests/core/RDP/capabilities/test_cap_share.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cap_sound : tests/core/RDP/capabilities/test_cap_sound.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_surfacecommands : tests/core/RDP/capabilities/test_surfacecommands.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_window : tests/core/RDP/capabilities/test_window.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_bmpcache2 : tests/core/RDP/capabilities/test_bmpcache2.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_colcache : tests/core/RDP/capabilities/test_colcache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_common : tests/core/RDP/capabilities/test_common.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_virchan : tests/core/RDP/capabilities/test_virchan.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}

unit-test test_ServerRedirection : tests/core/RDP/test_ServerRedirection.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_GraphicUpdatePDU : tests/core/RDP/test_GraphicUpdatePDU.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RefreshRectPDU : tests/core/RDP/test_RefreshRectPDU.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_logon : tests/core/RDP/test_logon.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_nego : tests/core/RDP/test_nego.cpp openssl crypto dl krb5 gssglue libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersCommon : tests/core/RDP/orders/test_RDPOrdersCommon.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersNames : tests/core/RDP/orders/test_RDPOrdersNames.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMem3Blt : tests/core/RDP/orders/test_RDPOrdersPrimaryMem3Blt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersSecondaryGlyphCache : tests/core/RDP/orders/test_RDPOrdersSecondaryGlyphCache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPDrawable : tests/core/RDP/test_RDPDrawable.cpp crypto png libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPGraphicDevice : tests/core/RDP/test_RDPGraphicDevice.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPSerializer : tests/core/RDP/test_RDPSerializer.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_remote_programs : tests/core/RDP/test_remote_programs.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_server : tests/core/test_server.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_session : tests/core/test_session.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_session_server : tests/core/test_session_server.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_wait_obj : tests/core/test_wait_obj.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_front : tests/front/test_front.cpp bitmap openssl snappy d3des krb5 gssglue png d3des z dl crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mod_api : tests/mod/test_mod_api.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mod_osd : tests/mod/test_mod_osd.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_draw_api : tests/mod/test_draw_api.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_null : tests/mod/null/test_null.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp_cursor : tests/mod/rdp/test_rdp_cursor.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp_orders : tests/mod/rdp/test_rdp_orders.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdpdr_asynchronous_task : tests/mod/rdp/channels/test_rdpdr_asynchronous_task.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_cliprdr_channel : tests/mod/rdp/channels/test_cliprdr_channel.cpp libboost_unit_test png : $(TEST_DEPENDENCIES) ;
unit-test test_rdpdr_channel : tests/mod/rdp/channels/test_rdpdr_channel.cpp libboost_unit_test png : $(TEST_DEPENDENCIES) ;
unit-test test_vnc : tests/mod/vnc/test_vnc.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_xup : tests/mod/xup/test_xup.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_bitmap : tests/utils/test_bitmap.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bitmap_perf : tests/test_bitmap_perf.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_colors : tests/utils/test_colors.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_d3des : tests/utils/test_d3des.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_difftimeval : tests/utils/test_difftimeval.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_genrandom : tests/utils/test_genrandom.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_log : tests/utils/test_log.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_netutils : tests/utils/test_netutils.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_png : tests/utils/test_png.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdtsc : tests/utils/test_rdtsc.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ssl_calls : tests/utils/test_ssl_calls.cpp openssl crypto dl z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_strings : tests/test_strings.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;


## Transport tests
## @{
unit-test test_meta_writer : tests/transport/detail/test_meta_writer.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_meta_opener : tests/transport/detail/test_meta_opener.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_in_meta_sequence_transport : tests/transport/test_in_meta_sequence_transport.cpp crypto snappy dl z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_filename_sequence_transport : tests/transport/test_filename_sequence_transport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_out_meta_sequence_transport : tests/transport/test_out_meta_sequence_transport.cpp crypto snappy dl z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_test_transport : tests/transport/test_test_transport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_count_transport : tests/transport/test_count_transport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_socket_transport : tests/transport/test_socket_transport.cpp openssl crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_file_transport : tests/transport/test_file_transport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_request_full_cleaning : tests/transport/test_request_full_cleaning.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_filename_transport : tests/transport/test_filename_transport.cpp z dl snappy crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_bulk_compression_transport : tests/transport/test_bulk_compression_transport.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_gzip_compression_transport : tests/transport/test_gzip_compression_transport.cpp z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_snappy_compression_transport : tests/transport/test_snappy_compression_transport.cpp snappy libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_cryptofile : tests/transport/test_cryptofile.cpp libboost_unit_test openssl crypto snappy dl z : $(TEST_DEPENDENCIES) ;

unit-test test_compression_transport_wrapper : tests/utils/test_compression_transport_wrapper.cpp z snappy libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}


## Buffer Transport tests
## @{
unit-test test_buffering_buf : tests/transport/buffer/test_buffering_buf.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_checksum_buf : tests/transport/buffer/test_checksum_buf.cpp crypto dl z libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}


#unit-test test_crypt_openssl : tests/test_crypt_openssl.cpp z dl crypto png libboost_unit_test : $(TEST_DEPENDENCIES) ;
#unit-test test_capture_wrm : tests/capture/test_capture_wrm.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryOpaqueRect : tests/core/RDP/orders/test_RDPOrdersPrimaryOpaqueRect.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryScrBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryScrBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMemBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryMemBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryDestBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryDestBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMultiDstBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryMultiDstBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMultiPatBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryMultiPatBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMultiScrBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryMultiScrBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryMultiOpaqueRect : tests/core/RDP/orders/test_RDPOrdersPrimaryMultiOpaqueRect.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryLineTo : tests/core/RDP/orders/test_RDPOrdersPrimaryLineTo.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryPolygonSC : tests/core/RDP/orders/test_RDPOrdersPrimaryPolygonSC.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryPolygonCB : tests/core/RDP/orders/test_RDPOrdersPrimaryPolygonCB.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryPolyline : tests/core/RDP/orders/test_RDPOrdersPrimaryPolyline.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryEllipseSC : tests/core/RDP/orders/test_RDPOrdersPrimaryEllipseSC.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryEllipseCB : tests/core/RDP/orders/test_RDPOrdersPrimaryEllipseCB.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryPatBlt : tests/core/RDP/orders/test_RDPOrdersPrimaryPatBlt.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersPrimaryGlyphIndex : tests/core/RDP/orders/test_RDPOrdersPrimaryGlyphIndex.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersSecondaryBmpCache : tests/core/RDP/orders/test_RDPOrdersSecondaryBmpCache.cpp bitmap crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersSecondaryColorCache : tests/core/RDP/orders/test_RDPOrdersSecondaryColorCache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_RDPOrdersSecondaryBrushCache : tests/core/RDP/orders/test_RDPOrdersSecondaryBrushCache.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_AlternateSecondaryWindowing : tests/core/RDP/orders/test_AlternateSecondaryWindowing.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_libpng : tests/test_libpng.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
#unit-test test_convert_bitmap : tests/test_convert_bitmap.cpp png z crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp : tests/mod/rdp/test_rdp.cpp bitmap krb5 gssglue png d3des z dl crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp_client_test_card : tests/client_mods/test_rdp_client_test_card.cpp bitmap z png crypto dl openssl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp_client_tls_w2008 : tests/client_mods/test_rdp_client_tls_w2008.cpp bitmap krb5 gssglue png crypto d3des z dl openssl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdp_client_wab : tests/client_mods/test_rdp_client_wab.cpp bitmap krb5 gssglue png crypto d3des z openssl dl krb5 gssglue libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_vnc_client_simple : tests/client_mods/test_vnc_client_simple.cpp bitmap krb5 gssglue png crypto d3des z dl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_rdesktop_client : tests/server/test_rdesktop_client.cpp bitmap png z openssl snappy d3des crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mstsc_client : tests/server/test_mstsc_client.cpp bitmap png z openssl snappy d3des crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_mstsc_client_rdp50bulk : tests/server/test_mstsc_client_rdp50bulk.cpp bitmap png z openssl snappy d3des crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_keymap2 : tests/test_keymap2.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_keymapSym : tests/test_keymapSym.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

## Widget tests
## @{
unit-test test_widget2_rect : tests/mod/internal/widget2/test_widget2_rect.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_image : tests/mod/internal/widget2/test_image.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_label : tests/mod/internal/widget2/test_label.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_tooltip : tests/mod/internal/widget2/test_tooltip.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_button : tests/mod/internal/widget2/test_flat_button.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_edit : tests/mod/internal/widget2/test_edit.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_multiline : tests/mod/internal/widget2/test_multiline.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_password : tests/mod/internal/widget2/test_password.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_number_edit : tests/mod/internal/widget2/test_number_edit.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_edit_valid : tests/mod/internal/widget2/test_edit_valid.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_radio_list : tests/mod/internal/widget2/test_radio_list.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_dialog : tests/mod/internal/widget2/test_flat_dialog.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_widget : tests/mod/internal/widget2/test_widget.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_composite : tests/mod/internal/widget2/test_composite.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;

#unit-test test_window_dialog : tests/mod/internal/widget2/test_window_dialog.cpp png z crypto dl libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_flat_login : tests/mod/internal/widget2/test_flat_login.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_wab_close : tests/mod/internal/widget2/test_flat_wab_close.cpp bitmap png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_screen : tests/mod/internal/widget2/test_screen.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;

# unit-test test_columnlayout : tests/mod/internal/widget2/test_columnlayout.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_linelayout : tests/mod/internal/widget2/test_linelayout.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_stacklayout : tests/mod/internal/widget2/test_stacklayout.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_grid : tests/mod/internal/widget2/test_grid.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_labelgrid : tests/mod/internal/widget2/test_labelgrid.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_flat_selector2 : tests/mod/internal/widget2/test_flat_selector2.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_group_box : tests/mod/internal/widget2/test_group_box.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_scroll : tests/mod/internal/widget2/test_scroll.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test test_tab : tests/mod/internal/widget2/test_tab.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_interactive_target : tests/mod/internal/widget2/test_flat_interactive_target.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}


## Mod tests
## @{
unit-test test_flat_dialog_mod : tests/mod/internal/test_flat_dialog_mod.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_login_mod : tests/mod/internal/test_flat_login_mod.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_wab_close_mod : tests/mod/internal/test_flat_wab_close_mod.cpp bitmap png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_widget_test_mod : tests/mod/internal/test_widget_test_mod.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_interactive_target_mod : tests/mod/internal/test_interactive_target_mod.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_bouncer2_mod : tests/mod/internal/test_bouncer2_mod.cpp png z libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_test_card_mod : tests/mod/internal/test_test_card_mod.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_replay_mod : tests/mod/internal/test_replay_mod.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_internal_mod : tests/mod/internal/test_internal_mod.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_copy_paste : tests/mod/internal/test_copy_paste.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}


## Regex tests
## @{
unit-test test_regex_state : tests/regex/test_regex_state.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_regex_parser : tests/regex/test_regex_parser.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_regex_ndfa : tests/regex/test_regex_ndfa.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_regex : tests/regex/test_regex.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
# unit-test benchmark_regex_parser : tests/benchmark/parser.cpp ;
# unit-test benchmark_regex_search : tests/benchmark/search.cpp ;
## @}

# unit-test test_base64 : tests/utils/test_base64.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_translation : tests/utils/test_translation.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;


## NLA TESTS
## @{
unit-test test_ber : tests/core/RDP/nla/asn1/test_ber.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_credssp : tests/core/RDP/nla/test_credssp.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_sspi : tests/core/RDP/nla/test_sspi.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_nla : tests/core/RDP/nla/test_nla.cpp dl krb5 gssglue z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;

alias test_ntlm_suite : test_ntlm_message_negotiate test_ntlm_avpair test_ntlm_message_challenge test_ntlm_message_authenticate test_ntlm_context ;

unit-test test_ntlm_message_negotiate : tests/core/RDP/nla/ntlm/test_ntlm_message_negotiate.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ntlm_avpair : tests/core/RDP/nla/ntlm/test_ntlm_avpair.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ntlm_message_challenge : tests/core/RDP/nla/ntlm/test_ntlm_message_challenge.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ntlm_message_authenticate : tests/core/RDP/nla/ntlm/test_ntlm_message_authenticate.cpp crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ntlm_context : tests/core/RDP/nla/ntlm/test_ntlm_context.cpp dl z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_ntlm : tests/core/RDP/nla/ntlm/test_ntlm.cpp dl z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_credentials : tests/core/RDP/nla/kerberos/test_credentials.cpp krb5 libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_kerberos : tests/core/RDP/nla/kerberos/test_kerberos.cpp krb5 gssglue libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}


unit-test test_darray : tests/utils/test_darray.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

## Widget for workflow
## @{
unit-test test_flat_wait : tests/mod/internal/widget2/test_flat_wait.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_flat_form : tests/mod/internal/widget2/test_flat_form.cpp png z crypto libboost_unit_test : $(TEST_DEPENDENCIES) ;
## @}

unit-test test_authorization_channels : tests/utils/test_authorization_channels.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_pattutils : tests/utils/test_pattutils.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;
unit-test test_strutils : tests/utils/test_strutils.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_diffiehellman : tests/utils/test_diffiehellman.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_finally : tests/utils/test_finally.cpp libboost_unit_test : $(TEST_DEPENDENCIES) ;

unit-test test_verifier : tests/test_verifier.cpp program_options libboost_unit_test openssl crypto snappy dl z :  $(TEST_DEPENDENCIES) ;



explicit front_Qt.o bitmap_data_allocator.o test_rdp_Qt ; #
#explicit test_rdp_Qt.o front_Qt.o bitmap_data_allocator.o test_rdp_Qt ; #

using qt5 : /usr/lib/x86_64-linux-gnu/qt5 : 5 : : : : : /usr/include/x86_64-linux-gnu/qt5 : /usr/lib/x86_64-linux-gnu ;

#obj test_rdp_Qt.o : tests/mod/rdp/test_rdp_Qt.cpp 
#    :
#        <include>/usr/include/x86_64-linux-gnu/qt5 
#        <cxxflags>-fPIC
#    ; 
obj front_Qt.o : src/front/front_Qt.cpp :  
    :
        <include>/usr/include/x86_64-linux-gnu/qt5 
        <cxxflags>-fPIC
    ; 
obj bitmap_data_allocator.o : src/utils/bitmap_data_allocator.cpp  
    :
        <include>/usr/include/x86_64-linux-gnu/qt5 
        <cxxflags>-fPIC
    ; 


exe test_rdp_Qt :
    src/utils/bitmap_data_allocator.cpp
    src/front/front_widget_Qt.hpp
    src/front/front_Qt.cpp
    #tests/mod/rdp/test_rdp_Qt.cpp #
    #test_rdp_Qt.o #
    /qt5//QtGui 
    /qt5//QtNetwork 
    /qt5//QtWidgets 
    krb5
    openssl
    crypto
    gssglue
    png
    d3des
    z
    dl
    libboost_unit_test
    :
    <include>/usr/include/x86_64-linux-gnu/qt5
    <cxxflags>-fPIC
    ;


explicit testQWidget.o test_Qt ; #


using qt5 : /usr/lib/x86_64-linux-gnu/qt5 : 5 : : : : : /usr/include/x86_64-linux-gnu/qt5 : /usr/lib/x86_64-linux-gnu ;


obj testQWidget.o : testQWidget.cpp :  
    :
        <include>/usr/include/x86_64-linux-gnu/qt5 
        <cxxflags>-fPIC
    ; 

exe test_Qt :
    testQWidget.o
    /qt5//QtGui 
    /qt5//QtNetwork 
    /qt5//QtWidgets
    libboost_unit_test
    :
    <include>/usr/include/x86_64-linux-gnu/qt5
    <cxxflags>-fPIC
    ;


